#include <iostream>
#include <vector>
#include <initializer_list>

using namespace std;


class CustomSet {
private:
    vector<int> elements;
public:

    CustomSet(initializer_list<int> userVector) {
        elements = userVector;
    }

    CustomSet(const CustomSet& other) {
        elements = other.elements;
    }

    CustomSet operator+(const CustomSet& other) {
        CustomSet result(*this);
        for (int elem : other.elements) {
            result.elements.push_back(elem);
        }
        return result;
    }

    CustomSet& operator++() {
        for (int& elem : elements) {
            ++elem;
        }
        return *this;
    }

    CustomSet& operator--() {
        for (int& elem : elements) {
            --elem;
        }
        return *this;
    }

    CustomSet& operator-=(int value) {
        for (int i = 0; i < elements.size(); ++i) {
            if (elements[i] == value) {
                elements.erase(elements.begin() + i);
                break;
            }
        }
        return *this;
    }


    void display() const {
        cout << "{";
        for (int elem : elements) {
            cout << elem << " ";
        }
        cout << "}" << endl;
    }
};


int main() {
    CustomSet setA = {3, 8, 52, 56, 5, 11};
    setA.display();
    CustomSet setB = {13, 8, 90, 2, 11};
    setB.display();
    CustomSet join = setA + setB;
    cout << "Объединение setA и setB:" << endl;
    join.display();
    cout << "После инкремента setA:" << endl;
    setA.display();
    cout << "После декремента setA:" << endl;
    setA.display();
    return 0;
}
