#include <iostream>
#include <iostream>
#include <string>
#include <cstdlib>
#include <ctime>
#include <fstream>
#include <sstream>
#include <vector>
#include <algorithm>
#include <cmath>
#include <locale>
using namespace std;


void nom1(){ 
  int a = 5;
  int* mas = new int[a];  
  for(int i = 0; i < a; i++){    
    mas[i] = rand() % 100;
  }
  cout << "исходный массив:\n";
  for(int i = 0; i < a; i++){
    cout << mas[i] << " ";
  }
  cout << "\n";
  cout << "новый массив:\n";
  for(int i = 0; i < a; i++){
    for(int j = 0; j < a; j++){
      if(mas[i] < mas[j]){        
        int temp = mas[i];       
        mas[i] = mas[j];
        mas[j] = temp;
      }
    }
  }
  for(int i = 0; i < a; i++){
    cout << mas[i] << " ";
  }
}


void nom2(){
  ifstream inputFile("input.txt");
  ofstream outputFile("output.txt");
  string line = "";
  int wordCount = 0;
  int charCount = 0;
  while (getline(inputFile, line)) {
    charCount += line.size(); 
    istringstream iss(line);
    string word;
    while (iss >> word) {
      wordCount++; 
      }
  }
  inputFile.close();
  outputFile << "Количество слов: " << wordCount << std::endl;
  outputFile << "Количество символов: " << charCount << std::endl;
  outputFile.close();
  cout << "Результаты записаны в output.txt" << std::endl;
}


const int SIZE = 5;




void nom3() {
  int array[SIZE][SIZE];
  for (int i = 0; i < SIZE; ++i) {
          for (int j = 0; j < SIZE; ++j) {
              array[i][j] = rand() % 100; 
          }
      }
  cout << "Двумерный массив:" << endl;
for (int i = 0; i < SIZE; ++i) {
    for (int j = 0; j < SIZE; ++j) {
        cout << array[i][j] << " ";
    }
    cout << endl;
}
  int rowSums[SIZE] = {0};
  int colSums[SIZE] = {0};
  for (int i = 0; i < SIZE; ++i) {
      for (int j = 0; j < SIZE; ++j) {
          rowSums[i] += array[i][j];
          colSums[j] += array[i][j];
      }
  }
  cout << "Суммы по строкам: " << endl;
  for (int i = 0; i < SIZE; ++i) {
      cout << "Строка " << i + 1 << ": " << rowSums[i] << endl;
  }

  cout << "Суммы по столбцам: " << endl;
  for (int j = 0; j < SIZE; ++j) {
      cout << "Столбец " << j + 1 << ": " << colSums[j] << endl;
  }
}


void bubbleSort(vector<int>& arr) {
  int n = arr.size();
  for (int i = 0; i < n - 1; ++i) {
      for (int j = 0; j < n - i - 1; ++j) {
          if (arr[j] > arr[j + 1]) {
              swap(arr[j], arr[j + 1]);
          }
      }
  }
}


void selectionSort(vector<int>& arr) {
  int n = arr.size();
  for (int i = 0; i < n - 1; ++i) {
      int minIdx = i;
      for (int j = i + 1; j < n; ++j) {
          if (arr[j] < arr[minIdx]) {
              minIdx = j;
          }
      }
      swap(arr[i], arr[minIdx]);
  }
}


void quickSort(vector<int>& arr, int left, int right) {
  if (left < right) {
      int pivot = arr[right];
      int i = left - 1;
      for (int j = left; j < right; ++j) {
          if (arr[j] < pivot) {
              ++i;
              swap(arr[i], arr[j]);
          }
      }
      swap(arr[i + 1], arr[right]);
      quickSort(arr, left, i);
      quickSort(arr, i + 2, right);
  }
}


int nom4() {
  const int SIZE = 1000;
  vector<int> arr(SIZE);
  for (int i = 0; i < SIZE; ++i) {
      arr[i] = rand() % 10000; 
  }
  vector<int> arrCopy = arr;
  clock_t start = clock();
  bubbleSort(arr);
  clock_t end = clock();
  cout << "Пузырьковая сортировка: " << double(end - start) / CLOCKS_PER_SEC << " секунд." << endl;
  arr = arrCopy;
  start = clock();
  selectionSort(arr);
  end = clock();
  cout << "Сортировка выбором: " << double(end - start) / CLOCKS_PER_SEC << " секунд." << endl;
  arr = arrCopy;
  start = clock();
  quickSort(arr, 0, arr.size() - 1);
  end = clock();
  cout << "Быстрая сортировка: " << double(end - start) / CLOCKS_PER_SEC << " секунд." << endl;
  
  return 0;
}


int nom5(){
    string bro;
    cout << "Введите страку: " << endl;
    cin >> bro;
    string pro = bro;
    reverse(pro.begin(), pro.end());
    if (bro == pro){
        cout << "Строка является палиндромом" << endl;
    }
    else{
        cout << "Строка не является палиндромом" << endl;
    }
    return 0;
}


int nom6() {
    int* arr = nullptr; 
    int size = 0;
    int choice;
    while (true) {
        cout << "1. Добавить элемент" << endl;
        cout << "2. Удалить элемент" << endl;
        cout << "3. Вывести все элементы" << endl;
        cout << "4. Выйти" << endl;
        cin >> choice;
        switch (choice) {
            case 1: {
                int value;
                cout << "Введите значение элемента: ";
                cin >> value;
                int* temp = new int[size + 1]; 
                for (int i = 0; i < size; i++) {
                    temp[i] = arr[i];
                }
                temp[size] = value; 
                delete[] arr;
                arr = temp;
                size++;
                break;
            }
            case 2:
                if (size == 0) {
                    cout << "Массив пуст" << endl;
                } else {
                    int index;
                    cout << "Введите индекс элемента для удаления: ";
                    cin >> index;
                    if (index < 0 || index >= size) {
                        cout << "Неверный индекс" << endl;
                    } else {
                        for (int i = index; i < size - 1; i++) {
                            arr[i] = arr[i + 1];
                        }
                        int* temp = new int[size - 1]; 
                        for (int i = 0; i < size - 1; i++) {
                            temp[i] = arr[i];
                        }
                        delete[] arr;
                        arr = temp;
                        size--;
                    }
                }
                break;
            case 3:
                cout << "Все элементы массива: ";
                for (int i = 0; i < size; i++) {  
                    cout << arr[i] << " ";
                }
                cout << endl;
                break;
            case 4:
                delete[] arr; 
                return 0;
        }
    }
    return 0;
}


int main(){
    nom1();
    nom2();
    nom3();
    nom4();
    nom5();
    nom6();
}
