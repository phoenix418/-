#include <iostream>
#include <string>
#include <vector>
using namespace std;

class Lift {
  private:
    int minFloor;
    int maxFloor;
    int currentFloor;
    bool isWorking;
    int capacity;
    int currentLoad;
    vector<string> peopleInLift;

  public:
    Lift(int minFloor, int maxFloor, int capacity) {
        this->minFloor = minFloor;
        this->maxFloor = maxFloor;
        this->currentFloor = minFloor;
        this->isWorking = true;
        this->capacity = capacity;
        this->currentLoad = 0;
    }

    void turnOn() {
        isWorking = true;
    }

    void turnOff() {
        isWorking = false;
    }

    bool isLiftWorking() {
        return isWorking;
    }

    int getCurrentFloor() {
        return currentFloor;
    }


    void callLift(int floor) {
        if (isWorking) {
            if (floor >= minFloor && floor <= maxFloor) {
                currentFloor = floor;
                cout << "Лифт едет на этаж " << floor << endl;
            } 
            else {
                cout << "Неверный этаж. Лифт может двигаться только между " << minFloor << " и " << maxFloor << endl;
            }
        } 
        else {
            cout << "Лифт не работает. Пожалуйста, включите его." << endl;
        }
    }


    void enterLift(string person){
        if (isWorking){
            if(currentLoad < capacity) {
                peopleInLift.push_back(person);
                currentLoad++;
                cout << person << " зашел в лифт." << endl;
            } 
            else{
                cout << "Лифт полон. Невозможно зайти." << endl;
            }
        } 
        else{
            cout << "Лифт не работает. Пожалуйста, включите его." << endl;
        }
    }


    void exitLift(string person) {
        if (isWorking){
            for (int i = 0; i < peopleInLift.size(); i++) {
                if (peopleInLift[i] == person) {
                    peopleInLift.erase(peopleInLift.begin() + i);
                    currentLoad--;
                    cout << person << " вышел из лифта." << endl;
                    return;
                }
            }
            cout << person << " не находится в лифте." << endl;
        } 
        else {
            cout << "Лифт не работает. Пожалуйста, включите его." << endl;
        }
    }
};


int main() {
    Lift lift(-1, 10, 5);
    lift.turnOn();
    lift.callLift(5);
    lift.enterLift("John");
    lift.enterLift("Alice");
    lift.enterLift("Bob");
    lift.callLift(8);
    lift.exitLift("Alice");
    lift.enterLift("Mike");
    cout << "Текущий этаж: " << lift.getCurrentFloor() << endl;
    if (lift.isLiftWorking()) {
        cout << "Лифт работает: да" << endl;
    } else {
        cout << "Лифт работает: нет" << endl;
    }
    lift.turnOff();
    lift.callLift(3);
    return 0;
}
